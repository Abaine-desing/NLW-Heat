
      /* Seletor universal. */
      * {
        margin: 0%;
      }

      html, body {
        /* Variável para cores. */
        --grey: hsl(240, 9%, 89%);

        height: 100%;
        font-family: 'Roboto', sans-serif;
        -webkit-font-smoothing: antialiased;

        /* Background gradient: */
        background: linear-gradient(to right, rgb(223, 22, 172), orange);
      }

      body {
        display: grid;
        place-items: center;
      }

      main {
        background: url(images/background_vetor.svg) no-repeat center/cover;
        background-color: #13111b;
        width: 100vw;
        min-height: 812px;
        height: 100vw;
      }

      .container {
        max-width: 250px;
        margin-left: auto;
        margin-right: auto;
        text-align: center;
        color: var(--grey);
      }

      .avatar {
        width: 10rem;
        margin: 11.5rem auto 0;

        /* Significa que agora, ele definie os limites dentro da classe avatar. */
        position: relative;
      }

      .avatar span {
        /* Permite que cria-se níveis de empilhamento de um elemento em relação a outro. */
        position: absolute;
        top: -15px;

        /* Devido a configuração do clip-path, o posicionamento perder o nível empilhamento. Para que valide novamente o empilhamento, utiliza-se a propriedade abaixo: */
        z-index: 1;
      }

      /* > Este sinal, indica que irá buscar, dentro da classe avatar, o maior nível do elemento img. */
      .avatar > img {
        width: 10rem;
        height: 11.5rem;

        /*A propriedade abaixo, faz com que a imagem do elemento, se enquadre dentro das proporções ditadas acima.*/
        object-fit: cover;

        clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);
      }

      h1 {
        font-size: 1.5rem;
        color: #5a4b68;
        margin-top: 1.5rem;
      }

      a {
        color: var(--grey);
        text-decoration: none;
        margin-top: 0.25rem;
        display: flex;
        gap: 0.75rem;
        justify-content: center;
        align-items: center;
      }

      p {
        margin-top: 2rem;
      }

      ul {
        margin-top: 4rem;
        list-style: none;
        padding: 0;

        /* A propriedade display:flex reorganiza os itens horizontalmente lado a lado. */
        display: flex;

        /* Espaçamento entre os itens. */
        gap: 0.5rem;

        /* Alinhamento central do flex */
        justify-content: center;
      }

      li a {
        background: #201b2c;
        width: 40px;
        height: 40px;
        border: 1px;
        border-style: solid;
        border-color: #5a4b67;
        border-radius: 15%;
      }

      li a:hover {
        width: 45px;
        height: 45px;
        border: 1px;
        border-style: solid;
        border-color: #13111b;
        transition: 0.2s;
        border-bottom-color: #f35653;
        border-radius: 15%;
      }
